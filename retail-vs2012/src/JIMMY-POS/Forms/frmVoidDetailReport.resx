<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>