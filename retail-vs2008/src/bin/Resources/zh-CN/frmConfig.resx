<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnApply.Text" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="btnBrowse.Text" xml:space="preserve">
    <value>浏览</value>
  </data>
  <data name="btnBrowseExport.Text" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="btnBrowseImport.Text" xml:space="preserve">
    <value>浏览...</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="btnDownload.Text" xml:space="preserve">
    <value>立即下载</value>
  </data>
  <data name="btnExport.Text" xml:space="preserve">
    <value>出口</value>
  </data>
  <data name="btnImport.Text" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="btnOk.Text" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="btnRetrieve.Text" xml:space="preserve">
    <value>检索</value>
  </data>
  <data name="btnUpload.Text" xml:space="preserve">
    <value>手动上载</value>
  </data>
  <data name="chkAddNewLine.Text" xml:space="preserve">
    <value>删除商品时添加线</value>
  </data>
  <data name="chkApplyFiveCent.Text" xml:space="preserve">
    <value>适用 5%的概念</value>
  </data>
  <data name="chkAutoSynchronize.Text" xml:space="preserve">
    <value>自动上传</value>
  </data>
  <data name="chkConfirmDelete.Text" xml:space="preserve">
    <value>删除商品确认</value>
  </data>
  <data name="chkConfirmTxn.Text" xml:space="preserve">
    <value>交易确认</value>
  </data>
  <data name="chkConfirmVoid.Text" xml:space="preserve">
    <value>撤销确认</value>
  </data>
  <data name="chkDisallowUser.Text" xml:space="preserve">
    <value>禁止用户更换</value>
  </data>
  <data name="chkPaymentExceed.Text" xml:space="preserve">
    <value>付款超时</value>
  </data>
  <data name="chkPriceIncludeTax.Text" xml:space="preserve">
    <value>含税价格</value>
  </data>
  <data name="chkRemarksRequired.Text" xml:space="preserve">
    <value>删除商品时需要备注</value>
  </data>
  <data name="chkSelligBelowMinPrice.Text" xml:space="preserve">
    <value>销售价格低于最低值</value>
  </data>
  <data name="chkSelligBelowQty.Text" xml:space="preserve">
    <value>销售数量低于最低值</value>
  </data>
  <data name="chkSucceedDelete.Text" xml:space="preserve">
    <value>删除商品</value>
  </data>
  <data name="chkSucceedTxn.Text" xml:space="preserve">
    <value>交易成功</value>
  </data>
  <data name="chkSucceedVoid.Text" xml:space="preserve">
    <value>撤销成功</value>
  </data>
  <data name="chkUploadByLimit.Text" xml:space="preserve">
    <value>通过限制上载</value>
  </data>
  <data name="grpExport.Text" xml:space="preserve">
    <value>出口事务队列</value>
  </data>
  <data name="grpImport.Text" xml:space="preserve">
    <value>EMP 的导入主数据</value>
  </data>
  <data name="lblBranch.Text" xml:space="preserve">
    <value>分店</value>
  </data>
  <data name="lblCurrentSysLocale.Text" xml:space="preserve">
    <value>当前的系统区域</value>
  </data>
  <data name="lblDailySalesReport.Text" xml:space="preserve">
    <value>每日销售报告</value>
  </data>
  <data name="lblDatabaseHost.Text" xml:space="preserve">
    <value>数据库主机</value>
  </data>
  <data name="lblDateFrom.Text" xml:space="preserve">
    <value>从日期</value>
  </data>
  <data name="lblDateTo.Text" xml:space="preserve">
    <value>将日期</value>
  </data>
  <data name="lblDownload.Text" xml:space="preserve">
    <value>下载</value>
  </data>
  <data name="lblEnd.Text" xml:space="preserve">
    <value>lblEnd</value>
  </data>
  <data name="lblEndTime.Text" xml:space="preserve">
    <value>结束时间</value>
  </data>
  <data name="lblExportDateMsg.Text" xml:space="preserve">
    <value>如果未选中日期，则将导出尚未导出之前的所有交易记录。</value>
  </data>
  <data name="lblExportFile.Text" xml:space="preserve">
    <value>文件：</value>
  </data>
  <data name="lblExportMsg.Text" xml:space="preserve">
    <value>lblExportMsg</value>
  </data>
  <data name="lblImportFile.Text" xml:space="preserve">
    <value>文件：</value>
  </data>
  <data name="lblImportMsg.Text" xml:space="preserve">
    <value>lblImportMsg</value>
  </data>
  <data name="lblItemCode.Text" xml:space="preserve">
    <value>项目代码</value>
  </data>
  <data name="lblLogo.Text" xml:space="preserve">
    <value>徽标</value>
  </data>
  <data name="lblMessage1.Text" xml:space="preserve">
    <value>消息1</value>
  </data>
  <data name="lblMessage2.Text" xml:space="preserve">
    <value>消息2</value>
  </data>
  <data name="lblMessage3.Text" xml:space="preserve">
    <value>消息3</value>
  </data>
  <data name="lblMessage4.Text" xml:space="preserve">
    <value>消息4</value>
  </data>
  <data name="lblMinimumHour.Text" xml:space="preserve">
    <value>结束当日营业的最低时间</value>
  </data>
  <data name="lblPriceSchema.Text" xml:space="preserve">
    <value>价格计划</value>
  </data>
  <data name="lblPrinterSetup.Text" xml:space="preserve">
    <value>打印机设置</value>
  </data>
  <data name="lblReceipt.Text" xml:space="preserve">
    <value>回执</value>
  </data>
  <data name="lblStart.Text" xml:space="preserve">
    <value>lblStart</value>
  </data>
  <data name="lblStartTime.Text" xml:space="preserve">
    <value>开始时间</value>
  </data>
  <data name="lblStockSummarySoldReport.Text" xml:space="preserve">
    <value>股票出售报告的摘要</value>
  </data>
  <data name="lblSyncTiming.Text" xml:space="preserve">
    <value>同步时间</value>
  </data>
  <data name="lblSyncTimingExample.Text" xml:space="preserve">
    <value>(例如 5000 = 5 秒)</value>
  </data>
  <data name="lblSyncWebService.Text" xml:space="preserve">
    <value>网络服务</value>
  </data>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="lblTransaction.Text" xml:space="preserve">
    <value>交易</value>
  </data>
  <data name="lblUpload.Text" xml:space="preserve">
    <value>上传</value>
  </data>
  <data name="lblWelcomeTo.Text" xml:space="preserve">
    <value>欢迎</value>
  </data>
  <data name="tbImportExport.Text" xml:space="preserve">
    <value>导入和导出</value>
  </data>
  <data name="tbMessageSetup.Text" xml:space="preserve">
    <value>消息设置</value>
  </data>
  <data name="tbOthers.Text" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="tbPrintable.Text" xml:space="preserve">
    <value>可打印</value>
  </data>
  <data name="tbReceiptBottomMsg.Text" xml:space="preserve">
    <value>收据底部消息</value>
  </data>
  <data name="tbStandard.Text" xml:space="preserve">
    <value>标准</value>
  </data>
  <data name="tbSynch.Text" xml:space="preserve">
    <value>同步</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>配置</value>
  </data>
</root>